@page
@inject IHtmlLocalizer<AppResources> T
@model LoginModel

@{
    ViewData["Title"] = T["Login"];
}

<div class="row">
    <div class="col-12">
        <section>
            <form method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="invalid-feedback"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" type="password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="invalid-feedback"></span>
                </div>

                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe">
                            <input asp-for="Input.RememberMe" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-block btn-primary">@T["LoginButton"]</button>
                </div>

                <div class="form-group">
                    <a asp-page="./ForgotPassword">@T["ForgotPasswordQuestion"]</a>

                    | 

                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">@T["NoAccountQuestion"]</a>
                </div>
            </form>
        </section>

        @if (Model?.ExternalLogins?.Count > 0)
        {
            <div class="login-separator">
                @T["ExternalSeperator"]
            </div>

            <section>
                <form asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins)
                            {
                                <button type="submit" class="btn btn-block btn-dark btn-@provider.DisplayName.ToLowerInvariant()" name="provider" value="@provider.Name">
                                    <i class="fab fa-@provider.DisplayName.ToLowerInvariant()"></i>  @T[$"LoginWith{provider.DisplayName}"]        
                                </button>
                            }
                        </p>
                    </div>
                </form>
            </section>
        }
    </div>
</div>
